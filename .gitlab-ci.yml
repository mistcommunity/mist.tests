stages:
  - build
  - test

variables:
  img: gcr.io/mist-ops/tests

build:
  stage: build
  before_script:
    # Configure registries.
    - |
        export REGISTRIES=""

        # Login to gitlab docker registry.
        if [ -n "$CI_REGISTRY_IMAGE" ]; then
          echo "Logging in to gitlab registry."
          docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" \
            $CI_REGISTRY
          export REGISTRIES="$REGISTRIES $CI_REGISTRY_IMAGE"
          echo "Logged in to gitlab registry."
        else
          echo "No credentials provided for gitlab registry, skipping."
        fi

        # Login to other registry.
        if [ -n "$EXT_REGISTRY" ] && \
           [ -n "$EXT_REGISTRY_IMAGE" ] && \
           [ -n "$EXT_REGISTRY_USER" ] && \
           [ -n "$EXT_REGISTRY_PASSWORD" ]
        then
          echo "Logging in to $EXT_REGISTRY."
          docker login -u "$EXT_REGISTRY_USER" -p "$EXT_REGISTRY_PASSWORD" \
            "$EXT_REGISTRY"
          export REGISTRIES="$REGISTRIES $EXT_REGISTRY_IMAGE"
          echo "Logged in to $EXT_REGISTRY."
        else
          echo "No credentials provided for external registry, skipping."
        fi

        # Login to dockerhub.
        if [ -n "$DOCKERHUB_IMAGE" ] && \
           [ -n "$DOCKERHUB_USER" ] && \
           [ -n "$DOCKERHUB_PASSWORD" ]
        then
          echo "Logging in to dockerhub."
          docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
          export REGISTRIES="$REGISTRIES $DOCKERHUB_IMAGE"
          echo "Logged in to dockerhub."
        else
          echo "No credentials provided for dockerhub, skipping."
        fi

        # Check if any registry configured.
        if [ -z "$REGISTRIES" ]; then
          echo "No registries configured, exiting."
          exit 1
        fi
  script:
    - docker build --no-cache --rm -t $img:$CI_COMMIT_SHA .
    - echo "Pushing $img:$CI_COMMIT_SHA"
    - docker push $img:$CI_COMMIT_SHA
    - docker tag $img:$CI_COMMIT_SHA $img:$CI_COMMIT_REF_SLUG
    - docker tag $img:$CI_COMMIT_SHA mist/tests:$CI_COMMIT_SHA
    - echo "Pushing $img:$CI_COMMIT_REF_SLUG"
    - docker push $img:$CI_COMMIT_REF_SLUG
    - echo "Pushing mist/tests:$CI_COMMIT_SHA"
    - docker push mist/tests:$CI_COMMIT_SHA
    - if [ "$CI_COMMIT_REF_SLUG" != master ]; then exit 0; fi
    - docker tag $img:$CI_COMMIT_SHA $img:latest
    - echo "Pushing $img:latest"
    - docker push $img:latest
  tags:
    - builder

flake8:
  stage: test
  image: $img:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  before_script:
    - cd /mist.tests/
  script:
    - flake8 misttests/integration/api/mistrequests.py
    - flake8 misttests/integration/api/main/secrets.py
    - flake8 misttests/integration/api/utils.py
    - flake8 misttests/integration/gui/steps/browser.py
    - flake8 misttests/integration/gui/steps/images.py
    - flake8 misttests/integration/gui/steps/networks.py
    - flake8 misttests/integration/gui/steps/org_context.py
    - flake8 misttests/integration/gui/steps/popups.py
    - flake8 misttests/integration/gui/steps/scroll.py
    - flake8 misttests/integration/gui/steps/setup.py
    - flake8 misttests/integration/gui/steps/team.py
